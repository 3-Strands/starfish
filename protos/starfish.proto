syntax = "proto3";

package sil.starfish;

option java_multiple_files = true;
option java_outer_classname = "StarfishProto";
option java_package = "org.sil.starfish";

import "google/type/date.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/field_mask.proto";
import "google/protobuf/timestamp.proto";

// The Starfish API, for communicating with Starfish app.
service Starfish {

    // Authenticate a user by taking a JWT from Firebase and returning a native token
    // If no JWT is passed in the message body the server will look for it in the request metadata, under "authorization"
    rpc Authenticate (AuthenticateRequest) returns (AuthenticateResponse) {}

    // Create feedbacks for materials
    rpc CreateMaterialFeedbacks (stream CreateMaterialFeedbacksRequest) returns (stream CreateMaterialFeedbacksResponse) {}

    // Create or update actions
    rpc CreateUpdateActions (stream CreateUpdateActionsRequest) returns (stream CreateUpdateActionsResponse) {}

    // Create or update assignment of actions to users
    rpc CreateUpdateActionUsers (stream CreateUpdateActionUserRequest) returns (stream CreateUpdateActionUserResponse) {}

    // Create or update group evaluations
    rpc CreateUpdateGroupEvaluations (stream CreateUpdateGroupEvaluationRequest) returns (stream CreateUpdateGroupEvaluationResponse) {}

    // Create or update groups
    rpc CreateUpdateGroups (stream CreateUpdateGroupsRequest) returns (stream CreateUpdateGroupsResponse) {}

    // Add users to groups or change the role of users in groups
    rpc CreateUpdateGroupUsers (stream CreateUpdateGroupUsersRequest) returns (stream CreateUpdateGroupUsersResponse) {}

    // Create or update group evaluations
    rpc CreateUpdateLearnerEvaluations (stream CreateUpdateLearnerEvaluationRequest) returns (stream CreateUpdateLearnerEvaluationResponse) {}

    // Update or create materials as a stream
    rpc CreateUpdateMaterials (stream CreateUpdateMaterialsRequest) returns (stream CreateUpdateMaterialsResponse) {}

    // Update or create outputs as a stream
    rpc CreateUpdateOutputs (stream CreateUpdateOutputRequest) returns (stream CreateUpdateOutputResponse) {}

    // Create or update teacher responses
    rpc CreateUpdateTeacherResponses (stream CreateUpdateTeacherResponseRequest) returns (stream CreateUpdateTeacherResponseResponse) {}

    // Update or create transformations as a stream
    rpc CreateUpdateTransformations (stream CreateUpdateTransformationRequest) returns (stream CreateUpdateTransformationResponse) {}

    // Create or update starfish users
    // Created users start with pending status
    // When creating a user and another user already exists with the same phone country and phone number
    // then instead of creating a new user the existing user will be returned in the response (and
    // made pending if the existing user is inactive in Starfish app).
    // When updating a user it is only permitted to update pending users that were created by the requesting user.
    // When setting the phone number to a number of an existing user, then the user being updated is merged
    // with the existing user.
    rpc CreateUpdateUsers (stream CreateUpdateUserRequest) returns (stream CreateUpdateUserResponse) {}

    // Delete Actions.
    rpc DeleteActions (stream DeleteActionRequest) returns (stream DeleteActionResponse) {}

    // Remove users from groups.
    // The role on GroupUser message is ignored in this procedure
    rpc DeleteGroupUsers (stream GroupUser) returns (stream DeleteGroupUserResponse) {}

    // Delete Materials.
    rpc DeleteMaterials (stream DeleteMaterialRequest) returns (stream DeleteMaterialResponse) {}

    // Get the current user.
    rpc GetCurrentUser (google.protobuf.Empty) returns (User) {}

    // List the actions related to this user
    rpc ListActions (ListActionsRequest) returns (stream Action) {}

    // List all countries
    rpc ListAllCountries (ListAllCountriesRequest) returns (stream Country) {}

    // List all material topics
    rpc ListEvaluationCategories (ListEvaluationCategoriesRequest) returns (stream EvaluationCategory) {}

    // List the groups this user is a member of
    rpc ListGroups (ListGroupsRequest) returns (stream Group) {}

    // List the groups this user is a member of
    rpc ListGroupEvaluations (ListGroupEvaluationsRequest) returns (stream GroupEvaluation) {}

    // List languages in the current user's countries
    rpc ListLanguages (ListLanguagesRequest) returns (stream Language) {}

    // List the groups this user is a member of
    rpc ListLearnerEvaluations (ListLearnerEvaluationsRequest) returns (stream LearnerEvaluation) {}

    // List materials that the current user is permitted to see
    rpc ListMaterials (ListMaterialsRequest) returns (stream Material) {}

    // List all material topics
    rpc ListMaterialTopics (ListMaterialTopicsRequest) returns (stream MaterialTopic) {}

    // List all material types
    rpc ListMaterialTypes (ListMaterialTypesRequest) returns (stream MaterialType) {}

    // List outputs visible to the user
    rpc ListOutputs (ListOutputsRequest) returns (stream Output) {}

    // List the teacher responses visible to this user
    rpc ListTeacherResponses (ListTeacherResponsesRequest) returns (stream TeacherResponse) {}

    // List the transformation impact stories visible to this user
    rpc ListTransformations (ListTransformationsRequest) returns (stream Transformation) {}

    // List users that the current user has access to
    rpc ListUsers (ListUsersRequest) returns (stream User) {}

    rpc RefreshSession (RefreshSessionRequest) returns (AuthenticateResponse) {}

    // Perform a general sync which allows updates to any resource types and also
    // may fetch multiple resource types which have changed on the server, including deleted records
    rpc Sync (stream SyncRequest) returns (stream SyncResponse) {}

    // Update the current user.
    // Group or action connections cannot be updated through this procedure.
    rpc UpdateCurrentUser (UpdateCurrentUserRequest) returns (User) {}

}

// Action and Results tab each have the same two sub-tabs "Mine" and "My Groups"
enum ActionTab {
    ACTIONS_UNSPECIFIED = 0;
    ACTIONS_MINE = 1;
    ACTIONS_MY_GROUPS = 2;
}

enum ResultsTab {
    RESULTS_UNSPECIFIED = 0;
    RESULTS_MINE = 1;
    RESULTS_MY_GROUPS = 2;
}

enum ResourceType {
    TYPE_UNSPECIFIED = 0;
    ACTION_RESOURCE = 1;
    ACTION_USER_RESOURCE = 2;
    COUNTRY_RESOURCE = 3;
    EVALUATION_CATEGORY_RESOURCE = 4;
    EVALUATION_VALUE_NAME_RESOURCE = 5;
    GROUP_RESOURCE = 6;
    GROUP_EVALUATION_RESOURCE = 7;
    GROUP_USER_RESOURCE = 8;
    LANGUAGE_RESOURCE = 9;
    LEARNER_EVALUATION_RESOURCE = 10;
    MATERIAL_RESOURCE = 11;
    MATERIAL_FEEDBACK_RESOURCE = 12;
    MATERIAL_TOPIC_RESOURCE = 13;
    MATERIAL_TYPE_RESOURCE = 14;
    OUTPUT_RESOURCE = 15;
    OUTPUT_MARKER_RESOURCE = 16;
    TEACHER_RESPONSE_RESOURCE = 17;
    TRANSFORMATION_RESOURCE = 18;
    USER_RESOURCE = 19;
}

// An Action resource can be assigned to a group, and to multiple users
message Action {

    enum Type {
        TEXT_INSTRUCTION = 0;
        TEXT_RESPONSE = 1;
        MATERIAL_INSTRUCTION = 2;
        MATERIAL_RESPONSE = 3;
    }

    string id = 1;

    // Output only. The type of action. (determined by what elements are present in the action)
    // TEXT_INSTRUCTION: question is blank, material_id is blank
    // TEXT_RESPONSE: question is present, material_id is blank
    // MATERIAL_INSTRUCTION: question is blank, material_id is present
    // MATERIAL_RESPONSE: question is present, material_id is present
    Type type = 2;

    string name = 3;

    // Output only. The ID of the user who created this action
    string creator_id = 4;

    // The ID of the group this action is linked to (may be blank)
    string group_id = 5;

    // The instructions for how this action is to be completed
    string instructions = 6;

    // The ID of the material linked to this action (may be blank)
    string material_id = 7;

    // The question that the learner should answer for this action
    string question = 8;

    google.type.Date date_due = 9;

    // Output only. A history of edits made to this action object
    repeated Edit edit_history = 10;

}

// Connection between a User and an Action
message ActionUser {

    enum Status {
        UNSPECIFIED_STATUS = 0;
        INCOMPLETE = 1;
        COMPLETE = 2;
    }

    enum Evaluation {
        UNSPECIFIED_EVALUATION = 0;
        GOOD = 1;
        BAD = 2;
    }

    string id = 1;

    string action_id = 2;

    string user_id = 3;

    Status status = 4;

    string teacher_response = 5;

    string user_response = 7;

    Evaluation evaluation = 8;

}

message AuthenticateRequest {

    string firebase_jwt = 1;

    // The name of the user being authenticated.
    string user_name = 2;

}

message AuthenticateResponse {

    string user_token = 1;

    // The time the token expires
    google.protobuf.Timestamp expires_at = 2;

    // The ID of the user
    string user_id = 3;

    // The refresh token that can be used to refresh this user's session
    string refresh_token = 4;

}

message Country {

    string id = 1;

    string name = 2;

    string dialling_code = 3;

}

message CreateMaterialFeedbacksRequest {

    // Specify the material ID, the type and the report. Other fields cannot be specified
    // The reporter will be the user authenticated with the request.
    // The reported must have view permission for the material
    MaterialFeedback feedback = 1;

}

message CreateMaterialFeedbacksResponse {

    enum Status {
        SUCCESS = 0;
        FAILURE = 1;
    }

    // The MaterialFeedback after the create request.
    MaterialFeedback feedback = 1;

    // The status of the create request.
    Status status = 2;

    // Error message or any relevant message in response to the request.
    string message = 3;

}

message CreateUpdateActionsRequest {

    // The Action resource that will be created or replace the existing one on the server.
    // The ID of the action resource is optional for a create request.
    // If the ID is present and a Group exists with that ID then the request will be taken as an update
    // Otherwise it will be a create request.
    // If the ID is given in a create request and is valid UUID version 4 then this ID will be used for the
    // new resource, otherwise an ID will be generated
    Action action = 1;

    // The field mask specifying which fields of the Action resource should be updated
    // If not specified then all fields are updated
    // If specified and some fields excluded, then these fields will be ignored (in the case of update)
    // or set to the default value (in the case of create)
    // see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
    google.protobuf.FieldMask update_mask = 2;

}

message CreateUpdateActionsResponse {

    enum Status {
        SUCCESS = 0;
        FAILURE = 1;
    }

    // The Action after update or create request.
    Action action = 1;

    // The status of the update or create request.
    Status status = 2;

    // Error message or any relevant message in response to the request.
    string message = 3;

}

message CreateUpdateActionUserRequest {

    // The ActionUser resource that will be created or replace the existing one on the server.
    // If the group and user are already connected then this will be an update request
    // otherwise it will be a create request
    ActionUser action_user = 1;

    // The field mask specifying which fields of the ActionUser resource should be updated
    // If not specified then all fields are updated
    // If specified and some fields excluded, then these fields will be ignored (in the case of update)
    // or set to the default value (in the case of create)
    // see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
    google.protobuf.FieldMask update_mask = 2;

}

message CreateUpdateActionUserResponse {

    enum Status {
        SUCCESS = 0;
        FAILURE = 1;
    }

    // The ActionUser after update or create request.
    ActionUser action_user = 1;

    // The status of the update or create request.
    Status status = 2;

    // Error message or any relevant message in response to the request.
    string message = 3;

}

message CreateUpdateGroupEvaluationRequest {

    // The GroupEvaluation resource that will be created or replace the existing one on the server.
    // The ID of the group evaluation resource is optional for a create request.
    // If the ID is present and a GroupEvaluation exists with that ID then the request will be taken as an update
    // Otherwise it will be a create request.
    // For an update, only the evaluation field is set, all other fields are ignored.
    // Setting evaluation to "EVAL_UNSPECIFIED" deletes the group evaluation
    // A create request that duplicates user_id, group_id and month with an existing GroupEvaluation will fail.
    GroupEvaluation group_evaluation = 1;

}

message CreateUpdateGroupEvaluationResponse {

    enum Status {
        SUCCESS = 0;
        FAILURE = 1;
    }

    // The GroupEvaluation after the update or create action.
    GroupEvaluation group_evaluation = 1;

    // The status of the update or create request.
    Status status = 2;

    // Error message or any relevant message in response to the request.
    string message = 3;

}

message CreateUpdateGroupsRequest {

    // The Group resource that will be created or replace the existing one on the server.
    // The ID of the group resource is optional for a create request.
    // If the ID is present and a Group exists with that ID then the request will be taken as an update
    // Otherwise it will be a create request.
    // If the ID is given in a create request and is valid UUID version 4 then this ID will be used for the
    // new resource, otherwise an ID will be generated
    Group group = 1;

    // The field mask specifying which fields of the Group resource should be updated
    // If not specified then all fields are updated
    // If specified and some fields excluded, then these fields will be ignored (in the case of update)
    // or set to the default value (in the case of create)
    // see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
    google.protobuf.FieldMask update_mask = 2;

}

message CreateUpdateGroupsResponse {

    enum Status {
        SUCCESS = 0;
        FAILURE = 1;
    }

    // The Group after update or create request.
    Group group = 1;

    // The status of the update or create request.
    Status status = 2;

    // Error message or any relevant message in response to the request.
    string message = 3;

}

message CreateUpdateGroupUsersRequest {

    // The GroupUser resource that will be created or replace the existing one on the server.
    // If the group and user are already connected then this will be an update request for the role
    // otherwise it will be a create request
    GroupUser group_user = 1;

    // The field mask specifying which fields of the GroupUser resource should be updated
    // see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
    google.protobuf.FieldMask update_mask = 2;

}

message CreateUpdateGroupUsersResponse {

    enum Status {
        SUCCESS = 0;
        FAILURE = 1;
    }

    // The GroupUser resource after update or create request.
    GroupUser group_user = 1;

    // The status of the update or create request.
    Status status = 2;

    // Error message or any relevant message in response to the request.
    string message = 3;

}

message CreateUpdateLearnerEvaluationRequest {

    // The LearnerEvaluation resource that will be created or replace the existing one on the server.
    // The ID of the learner evaluation resource is optional for a create request.
    // If the ID is present and a LearnerEvaluation exists with that ID then the request will be taken as an update
    // If no ID is given, then a search will be made using the learner ID, the group ID,
    // the category_id and the month. If a matching LearnerEvaluation is found then this is treated as an update request
    // Otherwise it will be a create request.
    // For an update, only the evaluation field is set, and the evaluator is set to be the current user,
    // all other fields are ignored.
    // A create request that includes an ID and duplicates an existing entry on learner_id, group_id,
    // category_id and month will fail.
    LearnerEvaluation learner_evaluation = 1;

}

message CreateUpdateLearnerEvaluationResponse {

    enum Status {
        SUCCESS = 0;
        FAILURE = 1;
    }

    // The LearnerEvaluation after the update or create action.
    LearnerEvaluation learner_evaluation = 1;

    // The status of the update or create request.
    Status status = 2;

    // Error message or any relevant message in response to the request.
    string message = 3;

}

message CreateUpdateMaterialsRequest {

    // The Material resource that will be created or replace the existing one on the server.
    // The ID of the material resource is optional for a create request.
    // If the ID is present and a Material exists with that ID then the request will be taken as an update
    // Otherwise it will be a create request.
    // If the ID is given in a create request and is valid UUID version 4 then this ID will be used for the
    // new resource, otherwise an ID will be generated
    Material material = 1;

    // The field mask specifying which fields of the Material resource should be updated
    // If not specified then all fields are updated
    // If specified and some fields excluded, then these fields will be ignored (in the case of update)
    // or set to the default value (in the case of create)
    // see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
    google.protobuf.FieldMask update_mask = 2;

}

message CreateUpdateMaterialsResponse {

    enum Status {
        SUCCESS = 0;
        FAILURE = 1;
    }

    // The Material after update or create request.
    Material material = 1;

    // The status of the update or create request.
    Status status = 2;

    // Error message or any relevant message in response to the request.
    string message = 3;

}

message CreateUpdateOutputRequest {

    // The Output resource that will be created or replace the existing one on the server.
    // The project_id, marker_id and month will be used to determine which output is being updated.
    // If not existing output matches these values then it will be a create request.
    // For an update, only the value field is set, and all other fields are ignored.
    Output output = 1;

}

message CreateUpdateOutputResponse {

    enum Status {
        SUCCESS = 0;
        FAILURE = 1;
    }

    // The Output after the update or create action.
    Output output = 1;

    // The status of the update or create request.
    Status status = 2;

    // Error message or any relevant message in response to the request.
    string message = 3;

}

message CreateUpdateTeacherResponseRequest {

    // The TeacherResponse resource that will be created or replace the existing one on the server.
    TeacherResponse teacher_response = 1;

}

message CreateUpdateTeacherResponseResponse {

    enum Status {
        SUCCESS = 0;
        FAILURE = 1;
    }

    // The TeacherResponse after the update or create action.
    TeacherResponse teacher_response = 1;

    // The status of the update or create request.
    Status status = 2;

    // Error message or any relevant message in response to the request.
    string message = 3;

}

message CreateUpdateTransformationRequest {

    // The Transformation resource that will be created or replace the existing one on the server.
    Transformation transformation = 1;

    // The field mask specifying which fields of the GroupUser resource should be updated
    // see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
    google.protobuf.FieldMask update_mask = 2;

}

message CreateUpdateTransformationResponse {

    enum Status {
        SUCCESS = 0;
        FAILURE = 1;
    }

    // The Transformation  after the update or create action.
    Transformation transformation = 1;

    // The status of the update or create request.
    Status status = 2;

    // Error message or any relevant message in response to the request.
    string message = 3;

}

message CreateUpdateUserRequest {

    // The User resource that will be created or replace the existing one on the server.
    // The ID of the user resource is optional for a create request.
    // If the ID is present and a User exists with that ID then the request will be taken as an update
    // Otherwise it will be a create request.
    // If the ID is given in a create request and is valid UUID version 4 then this ID will be used for the
    // new resource, otherwise an ID will be generated
    User user = 1;

    // The field mask specifying which fields of the User resource should be updated
    // If not specified then all fields are updated
    // If specified and some fields excluded, then these fields will be ignored (in the case of update)
    // or set to the default value (in the case of create)
    // see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
    google.protobuf.FieldMask update_mask = 2;

}

message CreateUpdateUserResponse {

    enum Status {
        SUCCESS = 0;
        FAILURE = 1;
    }

    // The User after created or update.
    User user = 1;

    // The status of the create/update request.
    Status status = 2;

    // Error message or any relevant message in response to the request.
    string message = 3;

}


message DeleteActionRequest {

    // The ID of the action to delete
    string action_id = 1;

}

message DeleteActionResponse {

    enum Status {
        SUCCESS = 0;
        FAILURE = 1;
    }

    // The ID of the action that was requested to be deleted
    string action_id = 1;

    // The status of the deletion
    Status status = 3;

    // Error message or any other message related to the deletion
    string message = 4;

}

message DeletedResource {

    // The type of resource that was deleted.
    ResourceType resource_type = 1;

    // The ID of the deleted resource.
    string id = 2;

    // The date of deletion
    google.type.Date deletion_date = 3;

}

message DeleteGroupUserRequest {

    // The ID of the group-user to delete
    string group_user_id = 1;

}

message DeleteGroupUserResponse {

    enum Status {
        SUCCESS = 0;
        FAILURE = 1;
    }

    // The ID of the group-user resource  that was requested to be deleted
    string group_user_id = 1;

    // The status of the removal
    Status status = 3;

    // Error message or any other message related to the removal
    string message = 4;

}


message DeleteMaterialRequest {

    // The ID of the material to delete
    string material_id = 1;

}

message DeleteMaterialResponse {

    enum Status {
        SUCCESS = 0;
        FAILURE = 1;
    }

    // The ID of the material that was requested to be deleted
    string material_id = 1;

    // The status of the deletion
    Status status = 3;

    // Error message or any other message related to the deletion
    string message = 4;

}

// A single edit to a single record recorded in history
message Edit {

    enum Event {
        EVENT_UNSPECIFIED = 0;
        CREATE = 1;
        UPDATE = 2;
        DELETE = 3;
    }

    // The username of the user who made the edit
    string username = 1;

    // The time of the edit
    google.protobuf.Timestamp time = 3;

    // The type of edit
    Event event = 4;

}

// Pre-defined categories for teachers to evaluate learners against
message EvaluationCategory {

    string id = 1;

    string name = 2;

    // each value may have a name specific to this category
    // here is a list of named values
    repeated EvaluationValueName value_names = 3;

}

// The name for a particular evaluation value
message EvaluationValueName {

    // The value being named
    int32 value = 1;

    // The name for the value
    string name = 2;

    // The unique identifier for this resource
    string id = 3;

}

// A literacy group
message Group {

    enum Status {
        ACTIVE = 0;
        INACTIVE = 1;
    }

    string id  = 1;

    string name = 2;

    // The IDs of languages connected to this group
    repeated string language_ids = 3;

    // The Users in this group. Output only
    // At least one needs to have admin role
    repeated GroupUser users = 4;

    // The IDs of the evaluation categories connected to this group
    // maximum is 3
    repeated string evaluation_category_ids = 5;

    // Output only. A history of edits made to this group object
    repeated Edit edit_history = 7;

    // A description of the group.
    string description = 8;

    // The email address of the EveryLanguage user responsible for linking this group to a project.
    string link_email = 9;

    // IDs mapped to names of languages connected to this group.
    // Output only. To edit the connected languages use the language_ids field.
    map<string, string> languages = 10;

    // Status of the group
    Status status = 11;

    // Output only. The output markers connected to this group through EveryLanguage.app projects
    repeated OutputMarker output_markers = 13;
}

// An evaluation of a literacy group by a user
message GroupEvaluation {

    enum Evaluation {
        EVAL_UNSPECIFIED = 0;
        BAD = 1;
        GOOD = 2;
    }

    string id  = 1;

    // The user who makes the evaluation
    string user_id = 2;

    // The group which is evaluated
    string group_id = 3;

    // The month to which this evaluation applies (day is not relevant)
    // In output the day value is set to 0, and ignored in input
    google.type.Date month = 4;

    // The evaluation for this group
    Evaluation evaluation = 5;
}

// Connection between a User and a Group
message GroupUser {

    enum Role {
        UNSPECIFIED_ROLE = 0;
        LEARNER = 1;
        TEACHER = 2;
        ADMIN = 3;
    }

    string id = 1;

    string group_id = 2;

    string user_id = 3;

    Role role = 4;

    string profile = 5;

}

message Language {

    string id = 1;

    string name = 2;

}

// An evaluation of a learner in the context of a literacy group
message LearnerEvaluation {

    string id  = 1;

    // The ID of the user being evaluated as learner
    // This user should have "learner" role in the group
    string learner_id = 2;

    // The ID of the user who last edited this evaluation
    // This user should have "teacher" or "admin" role in the group
    string evaluator_id = 3;

    // The ID of the group which is the context of this evaluation
    string group_id = 4;

    // The month to which this evaluation applies (day is not relevant)
    // In output the day value is set to 0, and ignored in input
    google.type.Date month = 5;

    // The ID of the category to which this evaluation belongs
    string category_id = 6;

    // The evaluation value which is an integer between 0 and 5 inclusive
    int32 evaluation = 7;
}

message ListActionsRequest {

    // Only return results updated at this date or later
    google.type.Date updated_since = 1;

}

message ListAllCountriesRequest {

    // Only return results updated at this date or later
    google.type.Date updated_since = 1;

}

message ListEvaluationCategoriesRequest {

    // Only return results updated at this date or later
    google.type.Date updated_since = 1;

}

message ListGroupsRequest {

    // Only return results updated at this date or later
    google.type.Date updated_since = 1;

}

message ListGroupEvaluationsRequest {

    // Only return results updated at this date or later
    google.type.Date updated_since = 1;

}

message ListLanguagesRequest {

    // Only return results updated at this date or later
    google.type.Date updated_since = 1;

}

message ListLearnerEvaluationsRequest {

    // Only return results updated at this date or later
    google.type.Date updated_since = 1;

}

message ListMaterialsRequest {

    // Only return results updated at this date or later
    google.type.Date updated_since = 1;

}

message ListMaterialTopicsRequest {

    // Only return results updated at this date or later
    google.type.Date updated_since = 1;

}

message ListMaterialTypesRequest {

    // Only return results updated at this date or later
    google.type.Date updated_since = 1;

}

message ListOutputsRequest {

    // Only return results updated at this date or later
    google.type.Date updated_since = 1;

}

message ListTeacherResponsesRequest {

    // Only return results updated at this date or later
    google.type.Date updated_since = 1;

}

message ListTransformationsRequest {

    // Only return results updated at this date or later
    google.type.Date updated_since = 1;

}

message ListUsersRequest {

    // Only return results updated at this date or later
    google.type.Date updated_since = 1;

}

message Material {

    enum Status {
        UNSPECIFIED_STATUS = 0;
        ACTIVE = 1;
        INACTIVE = 2;
    }

    enum Visibility {
        UNSPECIFIED_VISIBILITY = 0;
        CREATOR_VIEW = 1;
        GROUP_VIEW = 2;
        ALL_VIEW = 3;
    }

    enum Editability {
        UNSPECIFIED_EDITABILITY = 0;
        CREATOR_EDIT = 1;
        GROUP_EDIT = 2;
    }

    string id = 1;

    // Output only. For material update and create request this field is ignored.
    // Created materials will be assigned to the user validated in the create request.
    string creator_id = 2;

    Status status = 3;

    Visibility visibility = 4;

    Editability editability = 5;

    string title = 6;

    string description = 7;

    string target_audience = 8;

    string url = 9;

    // A list of filenames of files uploaded to this material.
    repeated string files = 10;

    repeated string language_ids = 11;

    // The IDs of MaterialTypes connected to this material
    repeated string type_ids = 12;

    // Do not specify IDs here, but instead use the topic string
    // If the string does not already exist as a topic it will be created.
    repeated string topics = 13;

    // This is output only. For material update and create request this field is ignored.
    repeated MaterialFeedback feedbacks = 14;

    // Output only
    google.type.Date date_created = 15;

    // Output only
    google.type.Date date_updated = 16;

    // Output only. A history of edits made to this material object
    repeated Edit edit_history = 17;

    // IDs mapped to names of languages connected to this material.
    // Output only. To edit the connected languages use the language_ids field.
    map<string, string> languages = 18;

}

message MaterialFeedback {

    enum Type {
        UNSPECIFIED_TYPE = 0;
        INAPPROPRIATE = 1;
    }

    string id = 1;

    Type type = 2;

    // The ID of the user who created this feedback.
    string reporter_id = 3;

    // The report from the user.
    string report = 4;

    // The response from the administrator.
    string response = 5;

    // The ID of the Material resource to which this feedback relates.
    string material_id = 6;

}

// user-created tags for Materials
message MaterialTopic {

    string id = 1;

    string name = 2;

}

// Pre-defined material types
message MaterialType {

    string id = 1;

    string name = 2;

}

// An Output is connected to a group, an EveryLanguage.app project ID and also an output marker.
// Each output is a number and has a month for which the number applies to the marker.
message Output {

    // The ID of the group to which this output relates.
    string group_id = 1;

    // The unique identifier for this output
    string id = 2;

    // The month to which this output relates.
    // In output the day value is set to 0, and ignored in input
    google.type.Date month = 5;

    // The integer value of this output.
    int64 value = 6;

    // Output only. The output marker to which this output relates.
    OutputMarker output_marker = 7;

}

message OutputMarker {

    // The ID of the EveryLanguage.app project to which this output marker relates.
    // Each Starfish group may be connected to more than one project in EveryLanguage.app
    string project_id = 2;

    // The ID of the output marker.
    string marker_id = 3;

    // The name of the output marker.
    string marker_name = 4;

}

// Send a refresh token to refresh a session get a fresh user token
message RefreshSessionRequest {

    string user_id = 1;

    string refresh_token = 2;

}

// When sending update requests through the Sync endpoint, it's possible that the update fails.
// In that case a corresponding SyncError message is returned in the response stream.
message SyncError {

    // The request message that triggered the error
    SyncRequest request = 1;

    // The error message
    string message = 2;

}

message SyncRequestMetaData {

    // Whether the Sync endpoint should respond with a stream of records from the server
    // including deleted records. If multiple SyncMetaData messages are in the stream
    // then records will be fetched if at least one of them has set this value to true.
    bool get_new_records = 1;

    // If the Sync endpoint will respond with a stream of records, they will be limited (including deleted records)
    // to those updated since this date.  If multiple SyncMetaData messages are in the stream
    // the earliest date is used. If no date is set then all records will be sent, but no deleted records.
    // Generally the client should insert here the exact timestamp returned in the response meta data
    // of the most recent successful sync.
    google.protobuf.Timestamp updated_since = 2;

    // If the Sync endpoint will respond with a stream of records, they will be limited (including deleted records)
    // to those of the types listed in the whitelist. If the whitelist is empty then all resource types
    // will be sent, except for any listed in the blacklist. If the whitelist is not empty
    // the blacklist is ignored. If multiple SyncMetaData messages are in the stream both the whitelist
    // and the blacklist accumulate entries from them all.
    repeated ResourceType resource_type_whitelist = 3;

    repeated ResourceType resource_type_blacklist = 4;

}

message SyncResponseMetaData {

    // the time that the response from the sync request was processed on the server.
    google.protobuf.Timestamp request_time = 1;

}

// When performing a sync the client may issue a stream of update requests, mixing request
// of different types into the same stream. The client may also add a meta data message into
// the stream to control and filter what records are returned in response from the server.
// Note that all updates in the stream are processed before the response stream is constructed
// (and hence, all updates in the stream may be reflected in the response).
// The response stream may also include messages to indicate deleted records.
message SyncRequest {

    oneof update {
        SyncRequestMetaData meta_data = 1;
        CreateMaterialFeedbacksRequest create_material_feedback = 2;
        CreateUpdateActionsRequest create_update_action = 3;
        CreateUpdateActionUserRequest create_update_action_user = 4;
        CreateUpdateGroupEvaluationRequest create_update_group_evaluation = 5;
        CreateUpdateGroupsRequest create_update_group = 6;
        CreateUpdateGroupUsersRequest create_update_group_user = 7;
        CreateUpdateLearnerEvaluationRequest create_update_learner_evaluation = 8;
        CreateUpdateMaterialsRequest create_update_material = 9;
        CreateUpdateOutputRequest create_update_output = 10;
        CreateUpdateTeacherResponseRequest create_update_teacher_response = 11;
        CreateUpdateTransformationRequest create_update_transformation = 12;
        CreateUpdateUserRequest create_update_user = 13;
        DeleteActionRequest delete_action = 14;
        GroupUser delete_group_user = 15;
        DeleteMaterialRequest delete_material = 16;
        UpdateCurrentUserRequest update_current_user = 17;
    }

}

// The response from a sync request is a stream that may include a variety of resource types.
// The final message in the stream will be the meta_data giving a timestamp for when the
// data for the stream was collected from the database.
message SyncResponse {

    oneof value {
        Action action = 1;
        Country country = 2;
        EvaluationCategory evaluation_category = 3;
        Group group = 4;
        GroupEvaluation group_evaluation = 5;
        Language language = 7;
        LearnerEvaluation learner_evaluation = 8;
        Material material = 9;
        MaterialTopic material_topic = 10;
        MaterialType material_type = 11;
        Output output = 12;
        TeacherResponse teacher_response = 13;
        Transformation transformation = 14;
        User user = 15;
        DeletedResource deleted_record = 16;
        SyncResponseMetaData meta_data = 17;
        SyncError error = 18;
    }

}

// A response of a teacher to a learner in a group
message TeacherResponse {

    string id  = 1;

    // The ID of the user being responded to as learner
    // This user should have "learner" role in the group
    string learner_id = 2;

    // The ID of the user giving this response as teacher
    // This user should have "teacher" or "admin" role in the group
    string teacher_id = 3;

    // The ID of the group which is the context of this response
    string group_id = 4;

    // The month to which this response applies (day is not relevant)
    // In output the day value is set to 0, and ignored in input
    google.type.Date month = 5;

    // The response
    string response = 6;
}

// A transformation reported by a user in context of a group and a month.
message Transformation {

    string id  = 1;

    // The ID of the user who reported this transformation
    // (or it was reported on behalf of this user).
    string user_id = 2;

    // The ID of the group which is the context of this transformation.
    string group_id = 3;

    // The month to which this transformation applies (day is not relevant)
    // In output the day value is set to 0, and ignored in input.
    google.type.Date month = 4;

    // The impact story.
    string impact_story = 5;

    // A list of filenames of photos uploaded to this transformation. Output only.
    repeated string files = 6;

}

message UpdateCurrentUserRequest {

    // The user resource which replaces the resource on the server.
    User user = 1;

    // The update mask applies to the resource. For the `FieldMask` definition,
    // see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
    google.protobuf.FieldMask update_mask = 2;

}

message User {

    enum Status {
        STATUS_UNSPECIFIED = 0;
        ACTIVE = 1;
        ACCOUNT_PENDING = 2;
    }

    // The ID is a version 4 UUID. Once assigned it cannot be changed.
    // The client may specify the UUID when requesting object creation,
    // otherwise server will generate it.
    string id = 1;

    // Full name of the user (required)
    string name = 2;

    // The user must be able to receive text messages at this number (required)
    string phone = 3;

    repeated string country_ids = 4;

    // The languages connected to a user should be in the countries connected,
    // however the server will not enforce this
    repeated string language_ids = 5;

    // If true, then this user has given approval for the groups they administer to be connected to projects in everylanguage.app
    bool link_groups = 6;

    repeated GroupUser groups = 7;

    repeated ActionUser actions = 8;

    ActionTab selected_actions_tab = 9;

    ResultsTab selected_results_tab = 10;

    // The country of this user for the purposes of dialling their phone number.
    string phone_country_id = 11;

    // Output only. Dependent on the value of phone_country_id.
    string dialling_code = 12;

    Status status = 13;

    // The user ID of the user that created this user in Starfish
    string creator_id = 14;

}