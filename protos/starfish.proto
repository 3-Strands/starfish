syntax = "proto3";

package sil.starfish;

option java_multiple_files = true;
option java_outer_classname = "StarfishProto";
option java_package = "org.sil.starfish";

import "google/type/date.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/field_mask.proto";

// The Starfish API, for communicating with Starfish app.
service Starfish {

    // Get the current user.
    rpc GetCurrentUser (google.protobuf.Empty) returns (User) {}

    // Update the current user.
    // Group or action connections cannot be updated through this procedure.
    rpc UpdateCurrentUser (UpdateCurrentUserRequest) returns (User) {}

    // List all countries
    rpc ListAllCountries (google.protobuf.Empty) returns (stream Country) {}

    // List languages in the current user's countries
    rpc ListLanguages (google.protobuf.Empty) returns (stream Language) {}

}

// Action and Results tab each have the same two sub-tabs "Mine" and "My Groups"
enum ActionTab {
    ACTIONS_UNSPECIFIED = 0;
    ACTIONS_MINE = 1;
    ACTIONS_MY_GROUPS = 2;
}

enum ResultsTab {
    RESULTS_UNSPECIFIED = 0;
    RESULTS_MINE = 1;
    RESULTS_MY_GROUPS = 2;
}

message User {

    // The ID is a version 4 UUID. Once assigned it cannot be changed.
    // The client may specify the UUID when requesting object creation,
    // otherwise server will generate it.
    string id = 1;

    // Full name of the user (required)
    string name = 2;

    // The user must be able to receive text messages at this number (required)
    string phone = 3;

    repeated string country_ids = 4;

    // The languages connected to a user should be in the countries connected,
    // however the server will not enforce this
    repeated string language_ids = 5;

    // If true, then this user has given approval for the groups they administer to be connected to projects in everylanguage.app
    bool link_groups = 6;

    repeated GroupUser groups = 7;

    repeated ActionUser actions = 8;

    ActionTab selected_actions_tab = 9;

    ResultsTab selected_results_tab = 10;

}

// Connection between a User and a Group
message GroupUser {

    enum Role {
        UNSPECIFIED_ROLE = 0;
        LEARNER = 1;
        TEACHER = 2;
        ADMIN = 3;
    }

    string group_id = 2;

    string user_id = 3;

    Role role = 4;

}

// Connection between a User and an Action
message ActionUser {

    enum Status {
        UNSPECIFIED_STATUS = 0;
        INCOMPLETE = 1;
        COMPLETE = 2;
    }

    string action_id = 2;

    string user_id = 3;

    Status status = 4;

    string teacher_response = 5;

    google.type.Date date_due = 6;

}

message Country {

    string id = 1;

    string name = 2;

}

message Language {

    string id = 1;

    string name = 2;

}


message UpdateCurrentUserRequest {

    // The user resource which replaces the resource on the server.
    User user = 1;

    // The update mask applies to the resource. For the `FieldMask` definition,
    // see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
    google.protobuf.FieldMask update_mask = 2;

}